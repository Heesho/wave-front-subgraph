type Directory @entity(immutable: false) {
  id: ID!
  index: BigInt!
  txCount: BigInt!
  volume: BigDecimal!
  liquidity: BigDecimal!
}

type User @entity(immutable: false) {
  id: ID!
  txCount: BigInt!
  referrer: User
  referrals: [User!]! @derivedFrom(field: "referrer")
  creator: [Creator!]! @derivedFrom(field: "user")
  contentOwned: [ContentPosition!]! @derivedFrom(field: "owner")
  contentCreated: [ContentPosition!]! @derivedFrom(field: "creator")
  tokensOwned: [Token!]! @derivedFrom(field: "owner")
  tokenPositions: [TokenPosition!]! @derivedFrom(field: "user")
  swaps: [Swap!]! @derivedFrom(field: "user")
}

type Token @entity(immutable: false) {
  id: ID!
  name: String!
  symbol: String!
  uri: String!
  owner: User!

  txCount: BigInt!
  volume: BigDecimal!
  liquidity: BigDecimal!
  totalSupply: BigDecimal!
  marketCap: BigDecimal!
  quoteVirtReserve: BigDecimal!
  quoteRealReserve: BigDecimal!
  tokenReserve: BigDecimal!
  marketPrice: BigDecimal!
  floorPrice: BigDecimal!
  contribution: BigDecimal!
  holders: BigInt!

  treasuryRevenueQuote: BigDecimal!
  treasuryRevenueToken: BigDecimal!
  contentRevenueQuote: BigDecimal!
  contentRevenueToken: BigDecimal!

  createdAtTimestamp: BigInt!
  createdAtBlockNumber: BigInt!
  marketOpen: Boolean!
  marketOpensAt: BigInt!

  isPrivate: Boolean!

  creators: [Creator!]! @derivedFrom(field: "token")

  contentPositions: [ContentPosition!]! @derivedFrom(field: "token")

  tokenPositions: [TokenPosition!]! @derivedFrom(field: "token")

  swaps: [Swap!]! @derivedFrom(field: "token")
  tokenDayData: [TokenDayData!]! @derivedFrom(field: "token")
  tokenHourData: [TokenHourData!]! @derivedFrom(field: "token")
  tokenMinuteData: [TokenMinuteData!]! @derivedFrom(field: "token")
}

type TokenPosition @entity(immutable: false) {
  id: ID!
  token: Token!
  user: User!
  contribution: BigDecimal!
  balance: BigDecimal!
  debt: BigDecimal!
  creatorRevenueQuote: BigDecimal!
  affiliateRevenueQuote: BigDecimal!
  affiliateRevenueToken: BigDecimal!
  curatorRevenueQuote: BigDecimal!
  curatorRevenueToken: BigDecimal!
}

type ContentPosition @entity(immutable: false) {
  id: ID!
  contentId: BigInt!
  token: Token!
  creator: User!
  owner: User!
  price: BigDecimal!
  nextPrice: BigDecimal!
}

type Swap @entity(immutable: false) {
  id: ID!
  token: Token!
  user: User!
  blockNumber: BigInt!
  timestamp: BigInt!
  quoteIn: BigDecimal!
  quoteOut: BigDecimal!
  tokenIn: BigDecimal!
  tokenOut: BigDecimal!
  marketPrice: BigDecimal!
  floorPrice: BigDecimal!
}

type TokenDayData @entity(immutable: false) {
  id: ID!
  token: Token!
  timestamp: BigInt!
  marketPrice: BigDecimal!
  floorPrice: BigDecimal!
  volume: BigDecimal!
}

type TokenHourData @entity(immutable: false) {
  id: ID!
  token: Token!
  timestamp: BigInt!
  marketPrice: BigDecimal!
  floorPrice: BigDecimal!
  volume: BigDecimal!
}

type TokenMinuteData @entity(immutable: false) {
  id: ID!
  token: Token!
  timestamp: BigInt!
  marketPrice: BigDecimal!
  floorPrice: BigDecimal!
  volume: BigDecimal!
}

type Creator @entity(immutable: false) {
  id: ID!
  user: User!
  token: Token!
}

type Sale @entity(immutable: false) {
  id: ID!
  token: Token!
}

type Content @entity(immutable: false) {
  id: ID!
  token: Token!
}

type Rewarder @entity(immutable: false) {
  id: ID!
  token: Token!
}
